<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorials on </title>
    <link>https://ryanjan.uk/tags/tutorials/</link>
    <description>Recent content in tutorials on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Sun, 24 Jun 2018 11:22:20 +0000</lastBuildDate><atom:link href="https://ryanjan.uk/tags/tutorials/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>vROps Reports and PowerCLI Part 3: A Helper Module</title>
      <link>https://ryanjan.uk/vrops-reports-and-powercli-part-three-a-helper-module/</link>
      <pubDate>Sun, 24 Jun 2018 11:22:20 +0000</pubDate>
      
      <guid>https://ryanjan.uk/vrops-reports-and-powercli-part-three-a-helper-module/</guid>
      <description>For your reference here is a list of the articles in this mini-series.
vROps Reports and PowerCLI Part 1: Generating Reports vROps Reports and PowerCLI Part 2: Downloading Reports vROps Reports and PowerCLI Part 3: A Helper Module (this article) Introduction If you have been following along with the previous two articles in this series, you should now have a pretty good understanding of how to manipulate the extensionData container via PowerCLI to generate and download reports from vRealize Operations Manager (vROps).</description>
    </item>
    
    <item>
      <title>vROps Reports and PowerCLI Part 2: Downloading Reports</title>
      <link>https://ryanjan.uk/vrops-reports-and-powercli-part-two-downloading-reports/</link>
      <pubDate>Mon, 21 May 2018 17:46:20 +0000</pubDate>
      
      <guid>https://ryanjan.uk/vrops-reports-and-powercli-part-two-downloading-reports/</guid>
      <description>For your reference, here are the articles in this mini-series:
vROps Reports and PowerCLI Part 1: Generating Reports vROps Reports and PowerCLI Part 2: Downloading Reports (this article) vROps Reports and PowerCLI Part 3: A Helper Module Introduction Following on from the previous article in this mini-series, this article demonstrates how to retrieve a generated report from vROps as a PowerShell object.
Downloading A Generated Report The last step of the previous article was to use the GetReport() method to verify that your report generation was complete.</description>
    </item>
    
    <item>
      <title>vROps Reports and PowerCLI Part 1: Generating Reports</title>
      <link>https://ryanjan.uk/running-vrops-reports-using-powercli/</link>
      <pubDate>Wed, 16 May 2018 11:33:34 +0000</pubDate>
      
      <guid>https://ryanjan.uk/running-vrops-reports-using-powercli/</guid>
      <description>For your reference, here are the articles in this mini-series:
vROps Reports and PowerCLI Part 1: Generating Reports (this article) vROps Reports and PowerCLI Part 2: Downloading Reports vROps Reports and PowerCLI Part 3: A Helper Module Introduction I&amp;rsquo;ve been spending quite a bit of time with vRealize Operations Manager (vROps) lately, mostly running reports. While this is easy enough to do via the web UI, I found myself running a report, downloading the .</description>
    </item>
    
    <item>
      <title>Installing Gogs In A FreeNAS Jail</title>
      <link>https://ryanjan.uk/installing-gogs-in-a-freenas-jail/</link>
      <pubDate>Mon, 26 Mar 2018 22:17:46 +0000</pubDate>
      
      <guid>https://ryanjan.uk/installing-gogs-in-a-freenas-jail/</guid>
      <description>I recently stumbled across the Gogs project whilst looking for self-hosted Git solutions. I run a FreeNAS server at home so I thought I would get the app up and running in a jail. Here is how I did it.
Jail Preparation Create a new jail named gogs and make sure that the jail is up to date by running.
pkg update &amp;amp;&amp;amp; pkg upgrade Now install the required packages.</description>
    </item>
    
  </channel>
</rss>
